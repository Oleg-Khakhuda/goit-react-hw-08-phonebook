{"version":3,"sources":["redux/thunks.js","redux/slices.js","redux/store.js","pages/Home.js","pages/Login.js","pages/Register.js","routes/PrivateRouter.js","routes/PublicRoutes.js","App.js","index.js"],"names":["BASE_USER_URL","registerThunk","createAsyncThunk","user","a","rejectWithValue","fetch","method","headers","body","JSON","stringify","response","console","log","json","data","error","message","loginThunk","currentThunk","_","getState","state","token","auth","Authorization","logoutThunk","authSlice","createSlice","name","initialState","email","isLoading","isAuth","myProp","reducers","action","payload","extraReducers","pending","fulfilled","rejected","actions","renameProp","authPersistConfig","key","storage","whiteList","authPersistReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Home","Login","useState","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","value","alert","reset","onSubmit","preventDefault","type","placeholder","onChange","Register","setName","PrivateRouter","Component","component","to","PublicRouter","App","useEffect","onClick","path","element","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.83da4ec4.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst BASE_USER_URL = 'https://connections-api.herokuapp.com';\r\nconst userLogin = '/users/login';\r\nconst userRegister = '/users/signup';\r\nconst userLogout = '/users/logout';\r\nconst userCurrent = '/users/current';\r\n\r\nexport const registerThunk = createAsyncThunk(\r\n    'user/register',\r\n    async (user, { rejectWithValue }) => {\r\n        try {\r\n            const response = await fetch(BASE_USER_URL + userRegister, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(user),\r\n            });\r\n            console.log(response);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue({ error: error.message })\r\n        }\r\n    });\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n    'user/login',\r\n    async (user, { rejectWithValue }) => {\r\n        try {\r\n            const response = await fetch(BASE_USER_URL + userLogin, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(user),\r\n            });\r\n            // console.log(response);\r\n            const data = await response.json();\r\n            // console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue({ error: error.message })\r\n        }\r\n    });\r\n\r\nexport const currentThunk = createAsyncThunk(\r\n    'user/current',\r\n    async (_, { rejectWithValue, getState }) => {\r\n        const state = getState();\r\n        const token = state.auth.token;\r\n        if (!token) return;\r\n        try {\r\n            const response = await fetch(BASE_USER_URL + userCurrent, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            console.log(response);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue({ error: error.message })\r\n        }\r\n    });\r\n    \r\nexport const logoutThunk = createAsyncThunk(\r\n    'user/logout',\r\n    async (_, { rejectWithValue, getState }) => {\r\n        const state = getState();\r\n        const token = state.auth.token;\r\n        try {\r\n            const response = await fetch(BASE_USER_URL + userLogout, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            console.log(response);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue({ error: error.message })\r\n        }\r\n    });     ","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { registerThunk, loginThunk, currentThunk, logoutThunk } from \"./thunks\";\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: { name: '', email: '' },\r\n        token: '',\r\n        error: null,\r\n        isLoading: false,\r\n        isAuth: false,\r\n        myProp: 'Hello',\r\n    },\r\n    reducers: {\r\n        'renameProp': (state, action) => {\r\n            return {\r\n                ...state,\r\n                myProp: action.payload,\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [registerThunk.pending](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        },\r\n        [registerThunk.fulfilled](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                isAuth: true,\r\n            }\r\n        },\r\n        [registerThunk.rejected](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload,\r\n            }\r\n        },\r\n\r\n        [loginThunk.pending](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        },\r\n        [loginThunk.fulfilled](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                isAuth: true,\r\n            }\r\n        },\r\n        [loginThunk.rejected](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload,\r\n            }\r\n        },\r\n\r\n        [currentThunk.pending](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        },\r\n        [currentThunk.fulfilled](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                user: action.payload,\r\n                isAuth: true,\r\n            }\r\n        },\r\n        [currentThunk.rejected](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload,\r\n                isAuth: false,\r\n            }\r\n        },\r\n        [logoutThunk.pending](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        },\r\n        [logoutThunk.fulfilled](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                user: { name: '', email: '' },\r\n                token: '',\r\n                isAuth: false,\r\n            }\r\n        },\r\n        [logoutThunk.rejected](state, action) {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload,\r\n                // isAuth: false,\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\n// buddy2316@gmail.com\r\n\r\n\r\nexport const { renameProp } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\nconst BASE_CONTACT_URL = 'https://61912c1741928b001768ff87.mockapi.io/';\r\nconst contacts = '/contacts';\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from '../redux/slices';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { getDefaultNormalizer } from '@testing-library/dom';\r\n  \r\nconst authPersistConfig = {\r\n    key: 'authToken',\r\n    storage,\r\n    whiteList: ['token']\r\n};\r\n\r\nconst authPersistReducer = persistReducer(authPersistConfig, authReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authPersistReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }  \r\n    })\r\n});\r\n\r\nexport const persistor = persistStore(store);","export function Home() {\r\n    return (\r\n        <>\r\n            <h2>Contacts</h2>  \r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginThunk } from \"../redux/thunks\";\r\n\r\nexport function Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n        case 'email':\r\n            setEmail(e.target.value);\r\n            break;\r\n        case 'password':\r\n            setPassword(e.target.value);\r\n            break;\r\n        default:\r\n            alert('Check input name please')\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const user = { email, password };\r\n        dispatch(loginThunk(user));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setEmail('');\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Login form</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    value={email}\r\n                    placeholder='email'\r\n                    onChange={handleChange}>\r\n                </input>\r\n                <br />\r\n                <input\r\n                    type='text'\r\n                    name='password'\r\n                    value={password}\r\n                    placeholder='password'\r\n                    onChange={handleChange}>\r\n                </input>\r\n                <br />\r\n                <button type='submit'>ADD</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerThunk } from \"../redux/thunks\";\r\n\r\nexport function Register() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n            case 'name':\r\n            setName(e.target.value);\r\n            break;\r\n        case 'email':\r\n            setEmail(e.target.value);\r\n            break;\r\n        case 'password':\r\n            setPassword(e.target.value);\r\n            break;\r\n        default:\r\n            alert('Check input name please')\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const user = { name, email, password };\r\n        dispatch(registerThunk(user));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Register form</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='name'\r\n                    onChange={handleChange}>\r\n                </input>\r\n                <br />\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    value={email}\r\n                    placeholder='email'\r\n                    onChange={handleChange}>\r\n                </input>\r\n                <br />\r\n                <input\r\n                    type='text'\r\n                    name='password'\r\n                    value={password}\r\n                    placeholder='password'\r\n                    onChange={handleChange}>\r\n                </input>\r\n                <br />\r\n                <button type='submit'>ADD</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import { Navigate } from \"react-router\";\r\n\r\nexport function PrivateRouter({ isAuth, component: Component }) {\r\n    return (\r\n        <>\r\n            <h2>PRIVATE</h2>\r\n            {isAuth ? <Component /> : <Navigate to='/login'/>}\r\n            \r\n        </>\r\n    )\r\n}","import { Navigate } from \"react-router\";\r\n\r\nexport function PublicRouter({ isAuth, component: Component }) {\r\n    return (\r\n        <>\r\n            <h2>PUBKIC</h2>\r\n            {isAuth ? <Navigate to='/' /> :<Component />}\r\n        </>\r\n    )\r\n}","import { Link, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { Register } from './pages/Register';\nimport { PrivateRouter } from './routes/PrivateRouter';\nimport { PublicRouter } from './routes/PublicRoutes';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { currentThunk } from './redux/thunks';\nimport { logoutThunk } from './redux/thunks';\n\nconst isAuth = false;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(currentThunk())\n  }, [dispatch]);\n  \n  const handleLogout = () => {\n    dispatch(logoutThunk())\n  }\n\n  return (\n    <div>\n      <header>\n        <nav>\n          <ul>\n            <li>\n              <Link to='/'>Home</Link>\n            </li>\n            <li>\n              <Link to='/login'>Login</Link>\n            </li>\n            <li>\n              <Link to='/register'>Register</Link>\n            </li>\n            <li>\n              <button type='button' onClick={handleLogout}>Log out</button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main>\n        <Routes>\n          <Route path='/' element={<PrivateRouter isAuth={isAuth} component={Home}/>} />\n          <Route path='/login' element={<PublicRouter isAuth={isAuth} component={Login}/>} />\n          <Route path='/register' element={<PublicRouter isAuth={isAuth} component={Register}/>}/>\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor} loading={null}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}